{"ast":null,"code":"import React from 'react';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { ImageGallery } from './ImageGallery/ImageGallery';\nimport { Button } from './Button/Button';\nimport { Loader } from './Loader/Loader';\nimport { Modal } from './Modal/Modal';\nexport class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      images: [],\n      isLoading: false,\n      currentSearch: '',\n      page: 1,\n      modalOpen: false,\n      modalImg: '',\n      modalAlt: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      const inputForSearch = event.target.element.inputForSearch;\n\n      if (inputForSearch.value.trim() === '') {\n        return;\n      }\n\n      const response = await fetchImage(inputForSearch.value, 1);\n      this.setState({\n        images: response,\n        currentSearch: inputForSearch.value,\n        isLoading: false,\n        page: 1\n      });\n    };\n\n    this.handleClickMore = async () => {\n      const response = await fetchImage(this.state.currentSearch, this.state.page + 1);\n      this.setState({\n        images: [...this.state.images, ...response],\n        page: this.state.page + 1\n      });\n    };\n\n    this.handleImageClick = event => {\n      this.setState({\n        modalOpen: true,\n        modadlAlt: event.target.alt,\n        modalImg: event.target.name\n      });\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        modalOpen: false,\n        modalImg: '',\n        modalAlt: ''\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ROZUMNIKI/Documents/GitHub/goit-react-hw-03-image-finder/src/components/App.jsx"],"names":["React","Searchbar","ImageGallery","Button","Loader","Modal","App","Component","state","images","isLoading","currentSearch","page","modalOpen","modalImg","modalAlt","handleSubmit","event","preventDefault","setState","inputForSearch","target","element","value","trim","response","fetchImage","handleClickMore","handleImageClick","modadlAlt","alt","name","handleModalClose"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,OAAO,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,aAAa,EAAE,EAHT;AAINC,MAAAA,IAAI,EAAE,CAJA;AAKNC,MAAAA,SAAS,EAAE,KALL;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,QAAQ,EAAE;AAPJ,KAD+B;;AAAA,SAWvCC,YAXuC,GAWxB,MAAMC,KAAN,IAAe;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMU,cAAc,GAAGH,KAAK,CAACI,MAAN,CAAaC,OAAb,CAAqBF,cAA5C;;AACA,UAAIA,cAAc,CAACG,KAAf,CAAqBC,IAArB,OAAgC,EAApC,EAAwC;AACtC;AACD;;AACD,YAAMC,QAAQ,GAAG,MAAMC,UAAU,CAACN,cAAc,CAACG,KAAhB,EAAuB,CAAvB,CAAjC;AACA,WAAKJ,QAAL,CAAc;AACZV,QAAAA,MAAM,EAAEgB,QADI;AAEZd,QAAAA,aAAa,EAAES,cAAc,CAACG,KAFlB;AAGZb,QAAAA,SAAS,EAAE,KAHC;AAIZE,QAAAA,IAAI,EAAE;AAJM,OAAd;AAMD,KAzBsC;;AAAA,SA2BvCe,eA3BuC,GA2BrB,YAAY;AAC5B,YAAMF,QAAQ,GAAG,MAAMC,UAAU,CAC/B,KAAKlB,KAAL,CAAWG,aADoB,EAE/B,KAAKH,KAAL,CAAWI,IAAX,GAAkB,CAFa,CAAjC;AAIA,WAAKO,QAAL,CAAc;AACZV,QAAAA,MAAM,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,EAAuB,GAAGgB,QAA1B,CADI;AAEZb,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAAX,GAAkB;AAFZ,OAAd;AAID,KApCsC;;AAAA,SAsCvCgB,gBAtCuC,GAsCpBX,KAAK,IAAI;AAC1B,WAAKE,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAE,IADC;AAEZgB,QAAAA,SAAS,EAAEZ,KAAK,CAACI,MAAN,CAAaS,GAFZ;AAGZhB,QAAAA,QAAQ,EAAEG,KAAK,CAACI,MAAN,CAAaU;AAHX,OAAd;AAKD,KA5CsC;;AAAA,SA8CvCC,gBA9CuC,GA8CpB,MAAM;AACvB,WAAKb,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,QAAQ,EAAE,EAFE;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KApDsC;AAAA;;AAAA","sourcesContent":["import React from 'react';\r\nimport { Searchbar } from './Searchbar/Searchbar';\r\nimport { ImageGallery } from './ImageGallery/ImageGallery';\r\nimport { Button } from './Button/Button';\r\nimport { Loader } from './Loader/Loader';\r\nimport { Modal } from './Modal/Modal';\r\n\r\nexport class App extends React.Component {\r\n  state = {\r\n    images: [],\r\n    isLoading: false,\r\n    currentSearch: '',\r\n    page: 1,\r\n    modalOpen: false,\r\n    modalImg: '',\r\n    modalAlt: '',\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n    const inputForSearch = event.target.element.inputForSearch;\r\n    if (inputForSearch.value.trim() === '') {\r\n      return;\r\n    }\r\n    const response = await fetchImage(inputForSearch.value, 1);\r\n    this.setState({\r\n      images: response,\r\n      currentSearch: inputForSearch.value,\r\n      isLoading: false,\r\n      page: 1,\r\n    });\r\n  };\r\n\r\n  handleClickMore = async () => {\r\n    const response = await fetchImage(\r\n      this.state.currentSearch,\r\n      this.state.page + 1\r\n    );\r\n    this.setState({\r\n      images: [...this.state.images, ...response],\r\n      page: this.state.page + 1,\r\n    });\r\n  };\r\n\r\n  handleImageClick = event => {\r\n    this.setState({\r\n      modalOpen: true,\r\n      modadlAlt: event.target.alt,\r\n      modalImg: event.target.name,\r\n    });\r\n  };\r\n\r\n  handleModalClose = () => {\r\n    this.setState({\r\n      modalOpen: false,\r\n      modalImg: '',\r\n      modalAlt: '',\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}